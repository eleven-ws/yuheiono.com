{"version":3,"file":"component---src-pages-works-index-jsx-3e07a0130e148453b718.js","mappings":"sRAuKA,UA3JaA,IACX,MAAOC,EAAUC,GAAeC,EAAAA,SAAe,OA6BzCC,EAAQC,EAAAA,EAYd,OAVAF,EAAAA,WAAgB,KACd,MAAMG,EAAQ,IAAIC,gBAAgBP,EAAMQ,SAASC,QACjDP,EAAYI,EAAMI,IAAI,aAEtBC,YAAW,KACT,MAAMC,EAAUC,OAAOC,aAAaC,QAAQ,YAAc,EAC1DF,OAAOG,OAAO,EAAGJ,EAAQ,GACxB,IAAI,GACN,CAACZ,EAAMQ,SAASC,UAGjBQ,EAAAA,EAAAA,GAACC,EAAAA,EAAM,MACLD,EAAAA,EAAAA,GAACE,EAAAA,EAAU,OACXF,EAAAA,EAAAA,GAACG,EAAAA,EAAG,CACFC,GAAI,KAEJJ,EAAAA,EAAAA,GAACG,EAAAA,EAAG,CACFE,GAAI,EACJC,GAAI,CACFC,QAAS,OACTC,eAAgB,WAGjBC,EAAAA,GAAWC,KAAI,CAAAC,EAAgBC,KAAO,IAAtB,MAAEC,EAAK,GAAEC,GAAIH,EAC5B,MAAMI,EAAO,WAAiB,QAAPD,EAAe,GAAK,aAAaA,KAElDE,EACI,QAAPF,GAA6B,OAAb9B,GAAsB8B,IAAO9B,EAEhD,OACEgB,EAAAA,EAAAA,GAACiB,EAAAA,EAAI,CACHC,IAAKN,EACLO,KAAMJ,EACNT,GAAI,CACFc,GAAI,CACFC,GAAI,EACJC,GAAI,EACJC,GAAI,GAENC,eAAgBR,GAAa,YAC7BS,cAAeT,GAAa,SAG7BH,EACI,MAIbb,EAAAA,EAAAA,GAAC0B,EAAAA,GAAI,CAACC,WAAS,EAACC,UAAU,MAAMC,QAAS,QACzBC,IAAb9C,GACCG,EACG4C,QAAOC,IAAsC,IAAnChD,SAAUiD,GAAmBD,EAGtC,OAAIhD,GAAyB,QAAbA,IAGVkD,MAAMC,QAAQF,GACTA,EAAkBG,SAASpD,GAE3BiD,IAAsBjD,EAIjC,IAED0B,KAAI,CAAA2B,EAAwBzB,KAAO,IAA9B,KAAE0B,EAAI,KAAEvB,EAAI,MAAEwB,GAAOF,EAGzB,OAFAtB,GAAQ,KAAI/B,EAAW,aAAaA,IAAa,KAG/CgB,EAAAA,EAAAA,GAAC0B,EAAAA,GAAI,CACHc,MAAI,EACJtB,IAAKN,EACL6B,GAAI,EACJpB,GAAI,EACJC,GAAI,EACJC,GAAI,EACJjB,GAAI,CACFoC,WAAY,wBAGd1C,EAAAA,EAAAA,GAACiB,EAAAA,EAAI,CACHE,KAAM,UAAUJ,IAChBT,GAAI,CACFC,QAAS,QACToC,MAAO,OACPC,OAAQ,QAEVC,QAASC,IACPA,EAAEC,iBACFnD,OAAOC,aAAamD,QAAQ,UAAWpD,OAAOD,UAC9CsD,EAAAA,EAAAA,UAASlC,EAAK,IAehBf,EAAAA,EAAAA,GAAA,OACEkD,IAAK,mCAAmCZ,YACxCa,MAAO,CACL5C,QAAS,QACToC,MAAO,WAIR,MAKZ,EAMN,MAAMS,EAAOA,KACXpD,EAAAA,EAAAA,GAACqD,EAAAA,EAAG,CAACC,MAAM,S","sources":["webpack://yuheiono.com/./src/pages/works/index.jsx"],"sourcesContent":["import * as React from 'react';\nimport { graphql, navigate } from 'gatsby';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport { Layout } from '../../components/layout';\nimport { Link } from '../../components/common/link';\nimport { Navigation } from '../../components/navigation';\nimport { Seo } from '../../components/seo';\nimport { categories } from '../../libs/categories';\nimport { works } from '../../libs/works';\n\nconst Page = props => {\n  const [category, setCategory] = React.useState('all');\n\n  const addImageData = ({ name, category, link }) => {\n    const data = props.data.allFile.edges.filter(worksThumbnail => {\n      return worksThumbnail.node.name === `${name}_00`;\n    });\n\n    if (!data || !data[0] || !data[0].node) {\n      // console.log(name);\n      // console.log(data);\n      return false;\n    }\n\n    const node = data[0].node;\n\n    return {\n      name,\n      category,\n      link,\n      image: getImage(node)\n    };\n  };\n\n  /*\n  const datas = works.map(work => {\n    return addImageData(work);\n  });\n  */\n\n  const datas = works;\n\n  React.useEffect(() => {\n    const param = new URLSearchParams(props.location.search);\n    setCategory(param.get('category'));\n\n    setTimeout(() => {\n      const scrollY = window.localStorage.getItem('scrollY') || 0;\n      window.scroll(0, scrollY);\n    }, 100);\n  }, [props.location.search]);\n\n  return (\n    <Layout>\n      <Navigation />\n      <Box\n        py={10} // header 分\n      >\n        <Box\n          mb={4} // thumbnail の spacing 分\n          sx={{\n            display: 'flex',\n            justifyContent: 'center'\n          }}\n        >\n          {categories.map(({ label, id }, i) => {\n            const link = `/works/${id === 'all' ? '' : `?category=${id}`}`;\n\n            const isCurrent =\n              (id === 'all' && category === null) || id === category;\n\n            return (\n              <Link\n                key={i}\n                href={link}\n                sx={{\n                  mx: {\n                    md: 4,\n                    sm: 2,\n                    xs: 1\n                  },\n                  textDecoration: isCurrent && 'underline',\n                  pointerEvents: isCurrent && 'none'\n                }}\n              >\n                {label}\n              </Link>\n            );\n          })}\n        </Box>\n        <Grid container direction='row' spacing={4}>\n          {category !== undefined &&\n            datas\n              .filter(({ category: thumbnailCategory }) => {\n                // ページカテゴリが何か指定されているかつ\n                // allではない場合は比較し、そうでなければ all とみなして true を返す\n                if (category && category !== 'all') {\n                  // @TODO: arrayとstringが混合している\n                  // カテゴリが複数指定されていたら includes 判定\n                  if (Array.isArray(thumbnailCategory)) {\n                    return thumbnailCategory.includes(category);\n                  } else {\n                    return thumbnailCategory === category;\n                  }\n                } else {\n                  return true;\n                }\n              })\n              .map(({ name, link, image }, i) => {\n                link += `/${category ? `?category=${category}` : ''}`;\n\n                return (\n                  <Grid\n                    item\n                    key={i}\n                    lg={2}\n                    md={3}\n                    sm={3}\n                    xs={6}\n                    sx={{\n                      transition: 'all 250ms ease-out'\n                    }}\n                  >\n                    <Link\n                      href={`/works/${link}`}\n                      sx={{\n                        display: 'block',\n                        width: '100%',\n                        height: '100%'\n                      }}\n                      onClick={e => {\n                        e.preventDefault();\n                        window.localStorage.setItem('scrollY', window.scrollY);\n                        navigate(link);\n                      }}\n                    >\n                      {/*\n                      <GatsbyImage\n                        image={image}\n                        alt={name}\n                        layout='fullWidth'\n                        placeholder='blurred'\n                        style={{\n                          pointerEvents: 'none',\n                          userSelect: 'none'\n                        }}\n                      />\n                      */}\n                      <img\n                        src={`https://cdn.yuheiono.com/images/${name}_00.webp`}\n                        style={{\n                          display: 'block',\n                          width: '100%'\n                        }}\n                      />\n                    </Link>\n                  </Grid>\n                );\n              })}\n        </Grid>\n      </Box>\n    </Layout>\n  );\n};\n\nexport default Page;\n\nexport const Head = () => {\n  return <Seo title='WORKS' />;\n};\n\n/*\nexport const query = graphql`\n  {\n    allFile(\n      filter: {\n        relativeDirectory: { eq: \"works\" }\n        name: { regex: \"/^.+_00$/\" }\n      }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            gatsbyImageData(width: 400, placeholder: BLURRED)\n          }\n          name\n        }\n      }\n    }\n  }\n`;\n*/\n"],"names":["props","category","setCategory","React","datas","works","param","URLSearchParams","location","search","get","setTimeout","scrollY","window","localStorage","getItem","scroll","___EmotionJSX","Layout","Navigation","Box","py","mb","sx","display","justifyContent","categories","map","_ref2","i","label","id","link","isCurrent","Link","key","href","mx","md","sm","xs","textDecoration","pointerEvents","Grid","container","direction","spacing","undefined","filter","_ref3","thumbnailCategory","Array","isArray","includes","_ref4","name","image","item","lg","transition","width","height","onClick","e","preventDefault","setItem","navigate","src","style","Head","Seo","title"],"sourceRoot":""}