{"version":3,"file":"component---src-templates-work-js-025d0e2816a7170ada88.js","mappings":"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","sources":["webpack://yuheiono.com/./src/templates/work.js"],"sourcesContent":["import * as React from 'react';\nimport { graphql, navigate } from 'gatsby';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { Layout } from '../components/layout';\nimport { Link } from '../components/common/link';\nimport { Seo } from '../components/seo';\nimport { Navigation } from '../components/navigation';\nimport { isExistId, idToLabel } from '../libs/categories';\nimport { works } from '../libs/works';\n\nconst Work = props => {\n  const { data, pageContext } = props;\n\n  const [category, setCategory] = React.useState('all');\n\n  const { html, frontmatter } = pageContext.work;\n  const { slug } = frontmatter;\n\n  const images = data?.allFile.edges\n    .filter(({ node }) => !/^.*_00$/.test(node.name))\n    .filter(({ node }) => node.extension !== 'mp4')\n    .map(({ node }) => getImage(node));\n\n  const _works = works.filter(work => {\n    if (category !== 'all') {\n      // カテゴリーが指定されている場合は一致するもののみ抽出\n      if (Array.isArray(work.category)) {\n        return work.category.includes(category);\n      } else {\n        return work.category === category;\n      }\n    } else {\n      // カテゴリ未指定時は全てのアイテムを返す\n      return true;\n    }\n  });\n\n  const currentIndex = _works.findIndex(({ link }) => `/${link}` === slug);\n\n  const nextIndex = (currentIndex + 1) % _works.length;\n  const prevIndex = currentIndex === 0 ? _works.length - 1 : currentIndex - 1;\n\n  const currentData = _works[currentIndex];\n  const nextData = _works[nextIndex];\n  const prevData = _works[prevIndex];\n\n  const prevLink = `/works/${prevData?.link}/${\n    category ? `?category=${category}` : ''\n  }`;\n  const nextLink = `/works/${nextData?.link}/${\n    category ? `?category=${category}` : ''\n  }`;\n  const categoryLink = '/works/' + (category ? `?category=${category}` : '');\n\n  // const videos = currentData?.videos;\n  const videos = data?.allFile.edges.filter(\n    ({ node }) => node.extension === 'mp4'\n  );\n\n  React.useEffect(() => {\n    const param = new URLSearchParams(props.location.search);\n    const category = param.get('category');\n    if (isExistId(category)) {\n      setCategory(category);\n    }\n  }, [props.location.search]);\n\n  return (\n    <Layout>\n      <Navigation />\n      <Box py={10}>\n        <Grid container justifyContent='center' spacing={4}>\n          {videos?.map((video, i) => {\n            console.log(video);\n            const videoId = 'hoge';\n            return (\n              <Grid item xs={12} key={i}>\n                <Box display='flex' justifyContent='center' alignItems='center'>\n                  <video\n                    src={video.node.publicURL}\n                    width={320}\n                    autoPlay={false}\n                    disablePictureInPicture={true}\n                    controls={true}\n                    controlsList={[\n                      'nodownload',\n                      'nofullscreen',\n                      'noplaybackrate'\n                    ].join(' ')}\n                    onContextMenu={e => {\n                      e.preventDefault();\n                    }}\n                  />\n                </Box>\n              </Grid>\n            );\n          })}\n          {currentData?.creatives?.map((image, i) => {\n            // [NOTE]: GatsbyImage の圧縮により 1920:1918 のようなパターンが発生したため\n            // ポートレート判定に含みを持たせるため 1.1 と比較\n            // const isPortrait = image.width <= image.height;\n\n            const isVideo = image.type === 'video';\n            const isPortrait = isVideo\n              ? true\n              : image.width / image.height <= 1.1;\n            const floatWidth = isPortrait ? '50%' : '75%';\n\n            return (\n              <Grid item xs={12} key={i}>\n                {isVideo ? (\n                  <Box\n                    display='flex'\n                    justifyContent='center'\n                    alignItems='center'\n                  >\n                    <video\n                      src={`https://cdn.yuheiono.com/videos/${image.name}`}\n                      width={320}\n                      autoPlay={false}\n                      disablePictureInPicture={true}\n                      controls={true}\n                      controlsList={[\n                        'nodownload',\n                        'nofullscreen',\n                        'noplaybackrate'\n                      ].join(' ')}\n                      onContextMenu={e => {\n                        e.preventDefault();\n                      }}\n                    />\n                  </Box>\n                ) : (\n                  <Box\n                    sx={{\n                      width: {\n                        md: floatWidth,\n                        sm: '100%',\n                        xs: '100%'\n                      },\n                      mx: 'auto',\n                      pointerEvents: 'none',\n                      userSelect: 'none'\n                    }}\n                    onClick={e => e.preventDefault()}\n                    onMouseDown={e => e.preventDefault()}\n                    onMouseUp={e => e.preventDefault()}\n                    onContextMenu={e => {\n                      e.preventDefault();\n                    }}\n                  >\n                    <img\n                      src={`https://cdn.yuheiono.com/images/${image.name}`}\n                      alt={image.name}\n                      width={image.width}\n                      height={image.height}\n                      style={{\n                        width: '100%',\n                        height: 'auto',\n                        backgroundColor: '#ddd',\n                        pointerEvents: 'none',\n                        userSelect: 'none'\n                      }}\n                    />\n                  </Box>\n                )}\n              </Grid>\n            );\n          })}\n\n          <Grid item xs={12} mb={4}>\n            <div dangerouslySetInnerHTML={{ __html: html }} />\n            <Typography\n              sx={{ letterSpacing: '0.25rem', textAlign: 'center' }}\n              dangerouslySetInnerHTML={{\n                __html: currentData?.title\n              }}\n            />\n            <Typography\n              sx={{ mt: 2, textAlign: 'center' }}\n              dangerouslySetInnerHTML={{\n                __html: currentData?.description\n              }}\n            />\n          </Grid>\n\n          <Grid item xs={6}>\n            <Box>\n              <Link\n                href={prevLink}\n                onClick={e => {\n                  e.preventDefault();\n                  navigate(prevLink);\n                }}\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'start'\n                }}\n              >\n                &lt;\n                <Typography\n                  variant='body2'\n                  align='left'\n                  sx={{\n                    ml: 1,\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                    whiteSpace: 'nowrap'\n                  }}\n                >\n                  {prevData?.title.replace('<br />', ' ')}\n                </Typography>\n              </Link>\n            </Box>\n          </Grid>\n          <Grid item xs={6}>\n            <Box>\n              <Link\n                href={nextLink}\n                onClick={e => {\n                  e.preventDefault();\n                  navigate(nextLink);\n                }}\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'end'\n                }}\n              >\n                <Typography\n                  variant='body2'\n                  align='right'\n                  sx={{\n                    mr: 1,\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                    whiteSpace: 'nowrap'\n                  }}\n                >\n                  {nextData?.title.replace('<br />', ' ')}\n                </Typography>\n                &gt;\n              </Link>\n            </Box>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Box\n              sx={{\n                display: 'flex',\n                justifyContent: 'center'\n              }}\n            >\n              <Link\n                href={categoryLink}\n                onClick={e => {\n                  e.preventDefault();\n                  navigate(categoryLink);\n                }}\n              >\n                <Typography variant='body2'>\n                  Back to \"{category ? idToLabel(category) : 'All'}\"\n                </Typography>\n              </Link>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Layout>\n  );\n};\n\nexport default Work;\n\n/*\nexport const data = graphql`\n  query Query($imagePathReg: String) {\n    allFile(\n      sort: { relativePath: ASC }\n      filter: {\n        relativeDirectory: { eq: \"works\" }\n        name: { regex: $imagePathReg }\n      }\n    ) {\n      edges {\n        node {\n          relativeDirectory\n          childImageSharp {\n            gatsbyImageData(width: 1920)\n          }\n          name\n          extension\n          publicURL\n        }\n      }\n    }\n  }\n`;\n*/\n\nexport const Head = ({ pageContext }) => {\n  const { slug } = pageContext.work.frontmatter;\n\n  const currentIndex = works.findIndex(({ link }) => `/${link}` === slug);\n\n  const title = works[currentIndex]?.title.replace('<br />', ' ') || '';\n\n  return <Seo title={title} />;\n};\n"],"names":["props","_currentData$creative","data","pageContext","category","setCategory","React","html","frontmatter","work","slug","_works","allFile","edges","filter","_ref","node","test","name","_ref2","extension","map","_ref3","getImage","works","Array","isArray","includes","currentIndex","findIndex","_ref4","link","nextIndex","length","prevIndex","currentData","nextData","prevData","prevLink","nextLink","categoryLink","videos","_ref5","URLSearchParams","location","search","get","isExistId","___EmotionJSX","Layout","Navigation","Box","py","Grid","container","justifyContent","spacing","video","i","console","log","item","xs","key","display","alignItems","src","publicURL","width","autoPlay","disablePictureInPicture","controls","controlsList","join","onContextMenu","e","preventDefault","creatives","image","isVideo","type","floatWidth","height","sx","md","sm","mx","pointerEvents","userSelect","onClick","onMouseDown","onMouseUp","alt","style","backgroundColor","mb","dangerouslySetInnerHTML","__html","Typography","letterSpacing","textAlign","title","mt","description","Link","href","navigate","variant","align","ml","overflow","textOverflow","whiteSpace","replace","mr","idToLabel","Head","_ref6","_works$currentIndex","_ref7","Seo"],"sourceRoot":""}