{"version":3,"file":"component---src-pages-works-index-tsx-5f7da57fbedbc855d41c.js","mappings":"4QAkJA,UAvIcA,IACZ,MAAOC,EAAUC,GAAeC,EAAAA,SAAe,OAEzCC,EAAQC,EAAAA,EAed,OAbAF,EAAAA,WAAgB,KACd,MACMG,EADQ,IAAIC,gBAAgBP,EAAMQ,SAASC,QACNC,IAAI,YAC/CJ,GAAiBJ,EAAYI,GAE7BK,YAAW,KACT,MAAMC,EAAkBC,OACtBC,OAAOC,aAAaC,QAAQ,YAAc,GAE5CF,OAAOG,OAAO,EAAGL,EAAQ,GACxB,IAAI,GACN,CAACZ,EAAMQ,SAASC,UAGjBS,EAAAA,EAAAA,GAACC,EAAAA,EAAM,MACLD,EAAAA,EAAAA,GAACE,EAAAA,EAAU,OACXF,EAAAA,EAAAA,GAACG,EAAAA,EAAG,CACFC,GAAI,KAEJJ,EAAAA,EAAAA,GAACG,EAAAA,EAAG,CACFE,GAAI,EACJC,GAAI,CACFC,QAAS,OACTC,eAAgB,WAGjBC,EAAAA,GAAWC,KAAI,CAAAC,EAAgBC,KAAM,IAArB,MAAEC,EAAK,GAAEC,GAAIH,EAE5B,MAAMI,EAAO,WAAiB,QAAPD,EAAe,gBAAkB,aAAaA,KAE/DE,EACI,QAAPF,GAA6B,OAAb/B,GAAsB+B,IAAO/B,EAEhD,OACEiB,EAAAA,EAAAA,GAACiB,EAAAA,EAAI,CACHC,IAAKN,EACLO,KAAMJ,EACNT,GAAI,CACFc,GAAI,CACFC,GAAI,EACJC,GAAI,EACJC,GAAI,GAENC,eAAgBR,GAAa,YAC7BS,cAAeT,GAAa,SAG7BH,EACI,MAIbb,EAAAA,EAAAA,GAAC0B,EAAAA,EAAI,CAACC,WAAS,EAACC,UAAU,MAAMC,QAAS,QACzBC,IAAb/C,GACCG,EACG6C,QACCC,IAA6D,IAA1DjD,SAAUkD,GAA2CD,EAGtD,OAAIjD,GAAyB,QAAbA,IAGVmD,MAAMC,QAAQF,GACTA,EAAkBG,SAASrD,GAE3BkD,IAAsBlD,EAIjC,IAGH2B,KACC,CAAA2B,EAEEzB,KACsB,IAFtB,KAAE0B,EAAI,KAAEvB,GAAsCsB,EAK9C,OAFAtB,GAAQ,KAAIhC,EAAW,aAAaA,IAAa,KAG/CiB,EAAAA,EAAAA,GAAC0B,EAAAA,EAAI,CACHR,IAAKN,EACL2B,KAAM,CACJC,GAAI,EACJnB,GAAI,EACJC,GAAI,EACJC,GAAI,GAENjB,GAAI,CACFmC,WAAY,wBAGdzC,EAAAA,EAAAA,GAACiB,EAAAA,EAAI,CACHE,KAAM,UAAUJ,IAChBT,GAAI,CACFC,QAAS,QACTmC,MAAO,OACPC,OAAQ,QAEVC,QAASC,IACPA,EAAEC,iBACFlD,OAAOC,aAAakD,QAClB,UACAC,OAAOpD,OAAOF,WAEhBuD,EAAAA,EAAAA,UAASlC,EAAK,IAGhBf,EAAAA,EAAAA,GAAA,OACEkD,IAAK,mCAAmCZ,YACxCI,MAAO,IACPC,OAAQ,IACRQ,MAAO,CACL5C,QAAS,QACTmC,MAAO,OACPC,OAAQ,OACRS,gBAAiB,WAIlB,MAMd,EAMN,MAAMC,EAAOA,KAAyBrD,EAAAA,EAAAA,GAACsD,EAAAA,EAAG,CAACC,MAAM,S","sources":["webpack://yuheiono.com/./src/pages/works/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { navigate } from 'gatsby';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid2';\nimport { Layout } from '../../components/layout';\nimport { Link } from '../../components/common/link';\nimport { Navigation } from '../../components/navigation';\nimport { Seo } from '../../components/seo';\nimport { categories } from '../../libs/categories';\nimport { works } from '../../libs/works';\n\nconst Page = (props: any) => {\n  const [category, setCategory] = React.useState('all');\n\n  const datas = works;\n\n  React.useEffect(() => {\n    const param = new URLSearchParams(props.location.search);\n    const paramCategory: string | null = param.get('category');\n    paramCategory && setCategory(paramCategory);\n\n    setTimeout(() => {\n      const scrollY: number = Number(\n        window.localStorage.getItem('scrollY') || 0\n      );\n      window.scroll(0, scrollY);\n    }, 100);\n  }, [props.location.search]);\n\n  return (\n    <Layout>\n      <Navigation />\n      <Box\n        py={10} // header 分\n      >\n        <Box\n          mb={4} // thumbnail の spacing 分\n          sx={{\n            display: 'flex',\n            justifyContent: 'center'\n          }}\n        >\n          {categories.map(({ label, id }, i) => {\n            // @TODO all の時に本当は /works/ にしたい\n            const link = `/works/${id === 'all' ? '?category=all' : `?category=${id}`}`;\n\n            const isCurrent =\n              (id === 'all' && category === null) || id === category;\n\n            return (\n              <Link\n                key={i}\n                href={link}\n                sx={{\n                  mx: {\n                    md: 4,\n                    sm: 2,\n                    xs: 1\n                  },\n                  textDecoration: isCurrent && 'underline',\n                  pointerEvents: isCurrent && 'none'\n                }}\n              >\n                {label}\n              </Link>\n            );\n          })}\n        </Box>\n        <Grid container direction='row' spacing={4}>\n          {category !== undefined &&\n            datas\n              .filter(\n                ({ category: thumbnailCategory }: { category: string[] }) => {\n                  // ページカテゴリが何か指定されているかつ\n                  // allではない場合は比較し、そうでなければ all とみなして true を返す\n                  if (category && category !== 'all') {\n                    // @TODO: arrayとstringが混合している\n                    // カテゴリが複数指定されていたら includes 判定\n                    if (Array.isArray(thumbnailCategory)) {\n                      return thumbnailCategory.includes(category);\n                    } else {\n                      return thumbnailCategory === category;\n                    }\n                  } else {\n                    return true;\n                  }\n                }\n              )\n              .map(\n                (\n                  { name, link }: { name: string; link: string },\n                  i: number\n                ): React.JSX.Element => {\n                  link += `/${category ? `?category=${category}` : ''}`;\n\n                  return (\n                    <Grid\n                      key={i}\n                      size={{\n                        lg: 2,\n                        md: 3,\n                        sm: 3,\n                        xs: 6\n                      }}\n                      sx={{\n                        transition: 'all 250ms ease-out'\n                      }}\n                    >\n                      <Link\n                        href={`/works/${link}`}\n                        sx={{\n                          display: 'block',\n                          width: '100%',\n                          height: '100%'\n                        }}\n                        onClick={e => {\n                          e.preventDefault();\n                          window.localStorage.setItem(\n                            'scrollY',\n                            String(window.scrollY)\n                          );\n                          navigate(link);\n                        }}\n                      >\n                        <img\n                          src={`https://cdn.yuheiono.com/images/${name}_00.webp`}\n                          width={400}\n                          height={400}\n                          style={{\n                            display: 'block',\n                            width: '100%',\n                            height: 'auto',\n                            backgroundColor: '#ddd'\n                          }}\n                        />\n                      </Link>\n                    </Grid>\n                  );\n                }\n              )}\n        </Grid>\n      </Box>\n    </Layout>\n  );\n};\n\nexport default Page;\n\nexport const Head = (): React.JSX.Element => <Seo title='WORKS' />;\n"],"names":["props","category","setCategory","React","datas","works","paramCategory","URLSearchParams","location","search","get","setTimeout","scrollY","Number","window","localStorage","getItem","scroll","___EmotionJSX","Layout","Navigation","Box","py","mb","sx","display","justifyContent","categories","map","_ref","i","label","id","link","isCurrent","Link","key","href","mx","md","sm","xs","textDecoration","pointerEvents","Grid","container","direction","spacing","undefined","filter","_ref2","thumbnailCategory","Array","isArray","includes","_ref3","name","size","lg","transition","width","height","onClick","e","preventDefault","setItem","String","navigate","src","style","backgroundColor","Head","Seo","title"],"sourceRoot":""}